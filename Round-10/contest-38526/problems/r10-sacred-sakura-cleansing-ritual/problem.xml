<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="6" short-name="r10-sacred-sakura-cleansing-ritual" url="https://polygon.codeforces.com/p1DP8LS/CaveNightingale/r10-sacred-sakura-cleansing-ritual">
    <names>
        <name language="chinese" value="稻妻的谜题"/>
        <name language="english" value="Puzzle in Inazuma"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="chinese" mathjax="true" path="statements/chinese/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/english/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="chinese" mathjax="true" path="statements/.html/chinese/problem.html" type="text/html"/>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/.html/english/problem.html" type="text/html"/>
        <statement language="chinese" path="statements/.pdf/chinese/problem.pdf" type="application/pdf"/>
        <statement language="english" path="statements/.pdf/english/problem.pdf" type="application/pdf"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>1500</time-limit>
            <memory-limit>268435456</memory-limit>
            <test-count>20</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test method="manual" points="5.0" sample="true"/>
                <test method="manual" points="5.0" sample="true"/>
                <test method="manual" points="5.0" sample="true"/>
                <test description="Min" method="manual" points="5.0"/>
                <test description="Edge in same layer" method="manual" points="5.0"/>
                <test description="Random Yes" method="manual" points="5.0"/>
                <test description="Random Yes" method="manual" points="5.0"/>
                <test description="Max Yes" method="manual" points="5.0"/>
                <test description="Random Yes" method="manual" points="5.0"/>
                <test description="Random Yes" method="manual" points="5.0"/>
                <test description="1 extra edge" method="manual" points="5.0"/>
                <test description="one edge missing" method="manual" points="5.0"/>
                <test description="Random Yes" method="manual" points="5.0"/>
                <test description="Random Yes" method="manual" points="5.0"/>
                <test description="Small Yes" method="manual" points="5.0"/>
                <test description="Small Yes" method="manual" points="5.0"/>
                <test description="Tiny Yes" method="manual" points="5.0"/>
                <test description="Tiny Yes" method="manual" points="5.0"/>
                <test description="Tiny Yes" method="manual" points="5.0"/>
                <test description="Tiny Yes" method="manual" points="5.0"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/checker.cc" type="cpp.g++17"/>
                <binary path="files/checker.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/validator.cc" type="cpp.g++17"/>
                <binary path="files/validator.exe" type="exe.win32"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker type="testlib">
            <source path="files/checker.cc" type="cpp.g++17"/>
            <binary path="check.exe" type="exe.win32"/>
            <copy path="check.cc" type="cpp.g++17"/>
            <testset>
                <test-count>2</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests>
                    <test verdict="wrong-answer"/>
                    <test verdict="ok"/>
                </tests>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/validator.cc" type="cpp.g++17"/>
                <binary path="files/validator.exe" type="exe.win32"/>
                <testset>
                    <test-count>1</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests>
                        <test verdict="invalid"/>
                    </tests>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="main">
                <source path="solutions/bfs.py" type="python.3"/>
                <binary path="solutions/bfs.pys3" type="pythonx.3"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/iter-by-layer.py" type="python.3"/>
                <binary path="solutions/iter-by-layer.pys3" type="pythonx.3"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>0</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list/>
    </stresses>
    <tags>
        <tag value="dfs bfs"/>
        <tag value="graph"/>
    </tags>
</problem>
